  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://orac/protocol.schema.json",
  "title": "orac message envelope",
  "type": "object",
  "additionalProperties": false,
  "required": ["v", "type", "id", "ts", "route"],
  "properties": {
    "v": { "type": "integer", "const": 1 },
    "type": { "type": "string", "enum": ["request", "response", "event"] },
    "id": { "type": "string", "minLength": 1, "maxLength": 128 },
    "reply_to": { "type": "string" },
    "ts": { "type": "string", "format": "date-time" },
    "route": { "type": "string", "minLength": 1, "maxLength": 128 },
    "meta": { "type": "object", "default": {}, "additionalProperties": true },
    "payload": { "oneOf": [
      { "type": "null" },
      { "$ref": "#/$defs/promptRequestPayload" },
      { "$ref": "#/$defs/promptResponsePayload" },
      { "$ref": "#/$defs/streamStartPayload" },
      { "$ref": "#/$defs/streamDeltaPayload" },
      { "$ref": "#/$defs/streamEndPayload" },
      { "$ref": "#/$defs/helloPayload" }
    ]},
    "error": { "oneOf": [
      { "type": "null" },
      { "$ref": "#/$defs/errorObj" }
    ]}
  },

  "allOf": [
    {
      "if": { "properties": { "type": { "const": "request" }, "route": { "const": "orac.prompt" } }, "required": ["type", "route"] },
      "then": { "properties": { "payload": { "$ref": "#/$defs/promptRequestPayload" } }, "required": ["payload"] }
    },
    {
      "if": { "properties": { "type": { "const": "response" }, "route": { "const": "orac.prompt" } }, "required": ["type", "route"] },
      "then": { "properties": { "payload": { "oneOf": [
        { "$ref": "#/$defs/promptResponsePayload" }, { "type": "null" }
      ] } } }
    },
    {
      "if": { "properties": { "type": { "const": "event" }, "route": { "const": "orac.prompt" } }, "required": ["type", "route"] },
      "then": {
        "properties": {
          "meta": {
            "type": "object",
            "properties": { "event": { "type": "string", "enum": ["start", "delta", "end", "error"] } },
            "required": ["event"],
            "additionalProperties": true
          }
        },
        "anyOf": [
          { "properties": { "meta": { "properties": { "event": { "const": "start" } } }, "payload": { "$ref": "#/$defs/streamStartPayload" } } },
          { "properties": { "meta": { "properties": { "event": { "const": "delta" } } }, "payload": { "$ref": "#/$defs/streamDeltaPayload" } } },
          { "properties": { "meta": { "properties": { "event": { "const": "end" } } }, "payload": { "$ref": "#/$defs/streamEndPayload" } } },
          { "properties": { "meta": { "properties": { "event": { "const": "error" } } }, "error": { "$ref": "#/$defs/errorObj" } } }
        ]
      }
    }
  ],

  "$defs": {
    "chatMessage": {
      "type": "object",
      "additionalProperties": false,
      "required": ["role", "content"],
      "properties": {
        "role": { "type": "string", "enum": ["system", "user", "assistant"] },
        "content": { "type": "string" }
      }
    },

    "promptRequestPayload": {
      "type": "object",
      "additionalProperties": false,
      "required": ["messages"],
      "properties": {
        "messages": { "type": "array", "minItems": 1, "items": { "$ref": "#/$defs/chatMessage" } },
        "tools": { "type": "array", "items": { "type": "object" } },
        "model_pref": { "type": "object", "additionalProperties": true },
        "context": { "type": "object", "additionalProperties": true },
        "attachments": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": ["name", "mime", "size"],
            "properties": {
              "name": { "type": "string" },
              "mime": { "type": "string" },
              "size": { "type": "integer", "minimum": 0 },
              "sha256": { "type": "string" },
              "transport": { "type": "object", "additionalProperties": true }
            }
          }
        }
      }
    },

    "usage": {
      "type": "object",
      "additionalProperties": false,
      "required": ["prompt_tokens", "completion_tokens", "total_tokens"],
      "properties": {
        "prompt_tokens": { "type": "integer", "minimum": 0 },
        "completion_tokens": { "type": "integer", "minimum": 0 },
        "total_tokens": { "type": "integer", "minimum": 0 }
      }
    },

    "promptResponsePayload": {
      "type": "object",
      "additionalProperties": false,
      "required": ["content", "stop_reason", "usage"],
      "properties": {
        "content": { "type": "string" },
        "stop_reason": { "type": "string", "enum": ["stop", "length", "tool_call", "error"] },
        "usage": { "$ref": "#/$defs/usage" }
      }
    },

    "streamStartPayload": {
      "type": "object",
      "additionalProperties": false,
      "required": ["model"],
      "properties": { "model": { "type": "string" } }
    },

    "streamDeltaPayload": {
      "type": "object",
      "additionalProperties": false,
      "required": ["content_delta"],
      "properties": { "content_delta": { "type": "string" } }
    },

    "streamEndPayload": {
      "type": "object",
      "additionalProperties": false,
      "required": ["stop_reason", "usage"],
      "properties": {
        "stop_reason": { "type": "string", "enum": ["stop", "length", "tool_call", "error"] },
        "usage": { "$ref": "#/$defs/usage" }
      }
    },

    "helloPayload": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "capabilities": { "type": "array", "items": { "type": "string" } },
        "want": { "type": "array", "items": { "type": "string" } }
      }
    },

    "errorObj": {
      "type": "object",
      "additionalProperties": false,
      "required": ["code", "message"],
      "properties": {
        "code": { "type": "string" },
        "message": { "type": "string" },
        "http": { "type": "integer", "minimum": 100, "maximum": 599 },
        "details": { "type": "object" }
      }
    }
  }
}

