# --------------------------------------------------------------------
# Oracle Free 23ai + APEX + ORDS + SQLcl Dockerfile for Orac (Linux only)
# Author: Clive Bostock
# Date: 2025-07-25
# --------------------------------------------------------------------

# Base image: Oracle Database Free 23ai Lite
FROM container-registry.oracle.com/database/free:latest-lite


# Build-time args
ARG ORAC_HOME=/home/oracle/orac
ARG APEX_VERSION=24.1
ARG ORDS_VERSION=24.3.0.262.0924
ARG SQLCL_VERSION=25.2.1.195.17510

# Set runtime environment
ENV ORAC_HOME=${ORAC_HOME} \
    ORACLE_BASE=/opt/oracle \
    ORACLE_HOME=/opt/oracle/product/23ai/dbhomeFree \
    PATH=$PATH:/opt/oracle/product/23ai/dbhomeFree/bin

# Switch to root to install required packages
USER root

# RUN microdnf install -y \
#         java-11-openjdk \
#         unzip \
#         curl \
#         vi \
#     && microdnf clean all

# Switch back to oracle user

# Create required internal directories
RUN mkdir -p \
    ${ORAC_HOME}/bin \
    ${ORAC_HOME}/etc \
    ${ORAC_HOME}/config/ords \
    ${ORAC_HOME}/scripts/setup \
    ${ORAC_HOME}/scripts/startup \
    ${ORAC_HOME}/scripts/apex \
    ${ORAC_HOME}/scripts/ords \
    ${ORAC_HOME}/scripts/sqlcl \
    ${ORAC_HOME}/scripts/orac_sql \
    ${ORAC_HOME}/setup/apex/staging \
    ${ORAC_HOME}/setup/ords/staging \
    ${ORAC_HOME}/logs 

# Copy deployment scripts and binary resources
COPY --chown=54321 resources/docker/oracle/setup   ${ORAC_HOME}/scripts/setup/
COPY --chown=54321 resources/docker/oracle/startup ${ORAC_HOME}/scripts/startup/
COPY --chown=54321 resources/docker/oracle/bin     ${ORAC_HOME}/bin
COPY --chown=54321 resources/docker/oracle/etc     ${ORAC_HOME}/etc

# Ensure startup and bin scripts are executable
RUN chmod +x ${ORAC_HOME}/scripts/startup/*.sh && \
    chmod +x ${ORAC_HOME}/bin/*.sh

# Install Java 11 manually since microdnf is not available
RUN curl -L -o /tmp/openjdk.tar.gz https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.20.1+1/OpenJDK11U-jdk_x64_linux_hotspot_11.0.20.1_1.tar.gz && \
    mkdir -p /opt/java/openjdk-11 && \
    tar -xzf /tmp/openjdk.tar.gz -C /opt/java/openjdk-11 --strip-components=1 && \
    rm /tmp/openjdk.tar.gz


ENV JAVA_HOME=/opt/java/openjdk-11
ENV PATH=$JAVA_HOME/bin:$PATH


USER oracle
# Download and extract APEX to staging (optional fallback)
RUN curl -L -o /tmp/apex.zip \
      "https://download.oracle.com/otn_software/apex/apex_${APEX_VERSION}.zip" && \
    unzip /tmp/apex.zip -d ${ORAC_HOME}/setup/apex/staging && \
    rm -f /tmp/apex.zip || true

# Download and extract ORDS to staging (optional fallback)
RUN curl -L -o /tmp/ords.zip \
      "https://download.oracle.com/otn_software/ajax/ords/ords-${ORDS_VERSION}.zip" && \
    unzip /tmp/ords.zip -d ${ORAC_HOME}/setup/ords/staging && \
    rm -f /tmp/ords.zip || true

# Download and extract SQLcl to staging (optional fallback)
RUN curl -L -o /tmp/sqlcl.zip \
      "https://download.oracle.com/otn_software/java/sqldeveloper/sqlcl-${SQLCL_VERSION}.zip" && \
    unzip /tmp/sqlcl.zip -d ${ORAC_HOME}/setup/sqlcl/staging && \
    rm -f /tmp/sqlcl.zip || true

USER root
# Expose ports for database and ORDS
EXPOSE 1521 8080 8888

# Entrypoint to initialize ORDS etc.
ENTRYPOINT ["/bin/bash", "-c"]
CMD ["/opt/oracle/scripts/setup/oracle-init.sh && /home/oracle/orac/scripts/startup/start-orac.sh"]

